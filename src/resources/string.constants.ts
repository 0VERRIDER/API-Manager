export const USER_STRINGS = {
    USER_FOUND: 'User found',
    USERS_FOUND: 'Users found',
    USER_FOUND_ID: (id: string) => `User with id ${id} found`,
    NO_USERS_FOUND: 'No users found',
    NO_USER_ID_FOUND: (id: string) => `No user with id ${id} found`,
    USER_DELETED: 'User deleted',
    USER_DELTED_ID: (id: string) => `User with id ${id} deleted`,
    USER_DELTED_ERROR_ID: (id: string) => `Error deleting user with id ${id}`,
    USER_CREATED: 'User created',
    USER_CREATED_ERROR: 'Error creating user',
    USER_UPDATED: 'User updated',
    USER_UPDATED_ERROR: 'Error updating user',
    USER_EMAIL_EXISTS: 'Email already exists',
    USER_EMAIL_NOT_EXISTS: ((email: string) => `Email ${email} does not exist`),
    USER_EMAIL_FOUND: (email: string) => `User with email ${email} found`,
}

export const AUTH_STRINGS = {
    INVALID_REFRESH_TOKEN: 'Invalid refresh token',
    INVALID_ACCESS_TOKEN: 'Invalid access token',
}

export const API_STRINGS = {
    API_CREATED: 'Api created',
    API_CREATED_ERROR: 'Error creating api',
    API_FOUND: 'Api found',
    APIS_FOUND: 'Apis found',
    API_FOUND_ID: (id: string) => `Api with id ${id} found`,
    NO_APIS_FOUND: 'No apis found',
    NO_API_ID_FOUND: (id: string) => `No api with id ${id} found`,
    API_DELETED: 'Api deleted',
    API_DELTED_ID: (id: string) => `Api with id ${id} deleted`,
    API_DELTED_ERROR_ID: (id: string) => `Error deleting api with id ${id}`,
    API_UPDATED: 'Api updated',
    API_UPDATED_ERROR: 'Error updating api',
    API_ENDPOINT_CREATED: 'Api endpoint created',
    API_ENDPOINT_CREATED_ERROR: 'Error creating api endpoint',
    API_ENDPOINT_FOUND: 'Api endpoint found',
    API_ENDPOINTS_FOUND: 'Api endpoints found',
    API_ENDPOINT_FOUND_ID: (id: string) => `Api endpoint with id ${id} found`,
    NO_API_ENDPOINTS_FOUND: 'No api endpoints found',
    NO_API_ENDPOINT_ID_FOUND: (id: string) => `No api endpoint with id ${id} found`,
    API_ENDPOINT_DELETED: 'Api endpoint deleted',
    API_ENDPOINT_DELTED_ID: (id: string) => `Api endpoint with id ${id} deleted`,
    API_ENDPOINT_DELTED_ERROR_ID: (id: string) => `Error deleting api endpoint with id ${id}`,
    API_ENDPOINT_UPDATED: 'Api endpoint updated',
    API_ENDPOINT_UPDATED_ERROR: 'Error updating api endpoint',
    API_AUTH_CREATED: 'Api auth created',
    API_AUTH_CREATED_ERROR: 'Error creating api auth',
    API_AUTH_FOUND: 'Api auth found',
    API_AUTHS_FOUND: 'Api auths found',
    API_AUTH_FOUND_ID: (id: string) => `Api auth with id ${id} found`,
    NO_API_AUTHS_FOUND: 'No api auths found',
    NO_API_AUTH_ID_FOUND: (id: string) => `No api auth with id ${id} found`,
    API_AUTH_DELETED: 'Api auth deleted',
    API_AUTH_DELTED_ID: (id: string) => `Api auth with id ${id} deleted`,
    API_AUTH_DELTED_ERROR_ID: (id: string) => `Error deleting api auth with id ${id}`,
    API_AUTH_UPDATED: 'Api auth updated',
    API_AUTH_UPDATED_ERROR: 'Error updating api auth',
}